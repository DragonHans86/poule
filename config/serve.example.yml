# In `dry_run` the operations will not be applied. 
dry_run:    True

# Use HTTP webhooks to retrieve GitHub events. In this mode, poule will listen on HTTP on the
# specified listen address. The GitHub repository must then be configured in such way that the
# webhook's "Payload URL" maps to the poule process. Configuring a secret is highly recommended in
# this mode.
http_listen: ":8080"
http_secret: "S3CR3T"

# Use NSQ (http://nsq.io) to retrieve GitHub events. In this mode, poule will subscribe to a
# specific NSQ channel and monitor one queue per repository.
# There are several advantages to using NSQ over plain webhooks: message persistency, message fan
# out (if you happen to have multiple tools handling GitHub events). 
#nsq_channel: "poule-dev"
#nsq_lookupd: "127.0.0.1:4161"

# Repositories is the collection of monitored repositories. The key corresponds to the repository
# short name (e.g., `docker/containerd`), and the value to the corresponding NSQ queue. When poule
# is used in HTTP mode, the value is unused and can be left empty.
repositories:
    docker/containerd:  "hooks-containerd"
    docker/docker:      "hooks-docker"

# Common triggers for all repositories.
common_configuration:

    # Apply the `dco-check` operation whenever a pull request is either opened, reopened, or
    # synchronized. The keys in a trigger must correspond to a valid GitHub event type, and the
    # value is a collection of valid GitHub actions.
    - triggers:
        pull_request:   [ opened, reopened, synchronized ]
      operations:
        - type:         dco-check

# Repository-specific triggers. Optionally, these configurations can be stored in a `poule.yml` at
# root of the repositories themselves. This greatly simplifies the management of a collection of
# heterogeneous projects, as different group of maintainers are free to chose the most appropriate
# set of rules for their particular project.
configuration:

    - repositories: [
        "docker/docker",
      ]
      triggers:
        issues:         [ edited, opened, reopened ]
      operations:
          - type:       label
            settings: {
                patterns: {
                    area/builder:        [ "dockerfile", "docker build" ],
                    area/distribution:   [ "docker login", "docker logout", "docker pull", "docker push", "docker search" ],
                    area/plugins:        [ "docker plugin" ],
                    area/network:        [ "docker network", "ipvs", "vxlan" ],
                    area/runtime:        [ "oci runtime error" ],
                    area/security/trust: [ "docker_content_trust" ],
                    area/swarm:          [ "docker node", "docker service", "docker swarm" ],
                    platform/desktop:    [ "docker for mac", "docker for windows" ],
                    platform/freebsd:    [ "freebsd" ],
                    platform/windows:    [ "nanoserver", "windowsservercore", "windows server" ],
                }
            }
          - type:       version-label
